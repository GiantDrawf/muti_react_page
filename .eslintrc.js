module.exports = {
    env: {
        browser: true,
        es6: true,
        node: true,
    },
    extends: ['eslint:recommended'],
    parser: 'babel-eslint',
    parserOptions: {
        ecmaFeatures: {
            experimentalObjectRestSpread: true,
            jsx: true,
        },
        sourceType: 'module',
    },
    plugins: ['react'],
    rules: {
        'no-console': ['warn', { allow: ['warn', 'error'] }],
        'array-callback-return': 'error',
        eqeqeq: ['error', 'smart'],
        'no-alert': 'warn',
        'no-caller': 'error',
        'no-eval': 'error',
        'no-extend-native': 'error',
        'no-extra-bind': 'error',
        'no-floating-decimal': 'error',
        'no-global-assign': 'error',
        'no-implied-eval': 'error',
        'no-labels': 'error',
        'no-loop-func': 'error',
        'no-multi-spaces': 'error',
        'no-multi-str': 'error',
        'no-sequences': 'error',
        'no-throw-literal': 'error',
        'no-unmodified-loop-condition': 'error',
        'no-unused-expressions': 'error',
        'no-useless-concat': 'error',
        'no-void': 'error',
        'no-warning-comments': 'warn',
        'no-with': 'error',
        'vars-on-top': 'error',
        'init-declarations': ['error', 'always'],
        'no-unused-vars': ['warn', { varsIgnorePattern: 'React' }],
        'no-use-before-define': 'error',
        'handle-callback-err': 'error',
        'block-spacing': 'error',
        'comma-spacing': ['error', { before: false, after: true }],
        'comma-style': ['error', 'last'],
        'eol-last': ['error', 'always'],
        'consistent-this': ['error', 'self'],
        'func-call-spacing': ['error', 'never'],
        'func-name-matching': 'error',
        'func-names': 'error',
        'func-style': ['error', 'expression', { allowArrowFunctions: true }],
        'jsx-quotes': ['error', 'prefer-double'],
        'key-spacing': ['error', { beforeColon: false, afterColon: true, mode: 'strict' }],
        'keyword-spacing': ['error', { before: true, after: true }],
        'linebreak-style': ['error', 'unix'],
        'new-parens': 'error',
        'newline-after-var': ['error', 'always'],
        'newline-before-return': 'error',
        'newline-per-chained-call': ['error', { ignoreChainWithDepth: 2 }],
        'no-inline-comments': 'warn',
        'no-lonely-if': 'error',
        'no-multiple-empty-lines': ['error', { max: 1, maxEOF: 1, maxBOF: 0 }],
        'no-nested-ternary': 'error',
        'no-tabs': 'error',
        'no-unneeded-ternary': 'error',
        'no-whitespace-before-property': 'error',
        'object-curly-spacing': ['error', 'always'],
        'one-var': ['error', { initialized: 'never' }],
        'operator-assignment': ['error', 'always'],
        quotes: ['error', 'single'],
        'require-jsdoc': [
            'warn',
            {
                require: {
                    FunctionDeclaration: false,
                    MethodDefinition: false,
                    ClassDeclaration: false,
                },
            },
        ],
        'semi-spacing': 'error',
        semi: 'error',
        'space-before-blocks': [
            'error',
            {
                functions: 'always',
                keywords: 'always',
                classes: 'always',
            },
        ],
        'space-infix-ops': 'error',
        'space-unary-ops': [
            'error',
            {
                words: true,
                nonwords: false,
            },
        ],
        'spaced-comment': ['error', 'always'],
        'arrow-spacing': 'error',
        'no-confusing-arrow': ['error', { allowParens: true }],
        'no-duplicate-imports': 'error',
        'no-useless-computed-key': 'error',
        'no-useless-constructor': 'error',
        'no-useless-rename': 'error',
        'no-var': 'error',
        'object-shorthand': 'error',
        'prefer-arrow-callback': 'error',
        'prefer-const': 'warn',
        'prefer-rest-params': 'error',
        'prefer-template': 'error',
        'rest-spread-spacing': ['error', 'never'],
        'react/forbid-component-props': 'warn',
        'react/no-deprecated': 'error',
        'react/no-unescaped-entities': 'error',
        'react/no-unknown-property': 'error',
        'react/no-unused-prop-types': ['error', { skipShapeProps: true }],
        'react/prefer-es6-class': ['error', 'always'],
        'react/prop-types': 'error',
        'react/require-render-return': 'error',
        'react/self-closing-comp': [
            'error',
            {
                component: true,
                html: true,
            },
        ],
        'react/style-prop-object': 'error',
        'react/jsx-equals-spacing': 'error',
        'react/jsx-filename-extension': 'error',
        'react/jsx-first-prop-new-line': ['error', 'multiline'],
        'react/jsx-indent-props': ['error', 4],
        'react/jsx-key': 'error',
        'react/jsx-no-duplicate-props': ['error', { ignoreCase: true }],
        'react/jsx-no-target-blank': 'warn',
        'react/jsx-no-undef': 'error',
        'react/jsx-pascal-case': 'error',
        'react/jsx-tag-spacing': ['error', { beforeSelfClosing: 'always' }],
        'react/jsx-uses-react': 'error',
        'react/jsx-uses-vars': 'error',
        'react/jsx-wrap-multilines': 'error',
    },
};
